name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  lint-code:

    runs-on: ubuntu-latest

    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/my_app:latest

  build-docker:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file ./Dockerfile --tag my-image:$(date +%s)
      
    - name: Login to DockerHub
    - uses: docker/login-action@v2
    - with:
       username: ${{ secrets.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_TOKEN }}
       
    - uses: actions/checkout@v3
    - name: Push the Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/node_dock

  test-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my_app:latest

      - name: Create Docker Network
        run: docker network create app

      - name: Run Docker image
        run: docker run --network app --network-alias app -p 80:80 -d ${{ secrets.DOCKERHUB_USERNAME }}/my_app

      - name: Wait for application start
        run: docker run --network app willwill/wait-for-it app:80 -t 10 -s -- echo "App is running"

      - name: Curl test
        run: curl localhost:80
